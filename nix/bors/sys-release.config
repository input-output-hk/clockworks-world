[{distillery,[{config_providers,[]}]},
 {sasl,[{errlog_type,error},{sasl_error_logger,false}]},
 {logger,
     [{level,info},
      {console,
          [{format,<<"$time $metadata[$level] $message\n">>},
           {metadata,[request_id,pid]}]}]},
 {tesla,[{'Elixir.Tesla.Middleware.Logger',[{debug,true}]}]},
 {phoenix,[{json_library,'Elixir.Jason'}]},
 {bors,
     [{ecto_repos,['Elixir.BorsNG.Database.RepoPostgres']},
      {api_github_root,
          {system,string,<<"GITHUB_URL_ROOT_API">>,
              <<"https://api.github.com">>}},
      {html_github_root,
          {system,string,<<"GITHUB_URL_ROOT_HTML">>,<<"https://github.com">>}},
      {api_github_timeout,{system,integer,<<"GITHUB_API_TIMEOUT">>,100000}},
      {log_outgoing,{system,<<"BORS_LOG_OUTGOING">>,false}},
      {poll_period,{system,integer,<<"BORS_POLL_PERIOD">>,1800000}},
      {'Elixir.BorsNG',
          [{command_trigger,{system,string,<<"COMMAND_TRIGGER">>,<<"bors">>}},
           {home_url,<<"https://bors.tech/">>},
           {allow_private_repos,
               {system,boolean,<<"ALLOW_PRIVATE_REPOS">>,false}},
           {dashboard_header_html,
               {system,string,<<"DASHBOARD_HEADER_HTML">>,
                   <<"      <a class=header-link href=\"https://bors.tech\">Home</a>\n      <a class=header-link href=\"https://forum.bors.tech\">Forum</a>\n      <a class=header-link href=\"https://bors.tech/documentation/getting-started/\">Docs</a>\n      <b class=header-link>Dashboard</b>\n">>}},
           {dashboard_footer_html,
               {system,string,<<"DASHBOARD_FOOTER_HTML">>,
                   <<"    This service is provided for free on a best-effort basis.\n">>}}]},
      {celebrate_new_year,true},
      {server,'Elixir.BorsNG.GitHub.Server'},
      {oauth2,'Elixir.BorsNG.GitHub.OAuth2'},
      {'Elixir.BorsNG.Database.RepoPostgres',
          [{adapter,'Elixir.Ecto.Adapters.Postgres'},
           {url,{system,<<"DATABASE_URL">>}},
           {timeout,{system,integer,<<"DATABASE_TIMEOUT">>,15000}},
           {pool_size,{system,integer,<<"POOL_SIZE">>,10}},
           {loggers,[{'Elixir.Ecto.LogEntry',log,[]}]},
           {ssl,{system,boolean,<<"DATABASE_USE_SSL">>,true}},
           {prepare,{system,atom,<<"DATABASE_PREPARE_MODE">>,named}},
           {priv,<<"priv/repo">>}]},
      {'Elixir.BorsNG.Database.RepoMysql',
          [{adapter,'Elixir.Ecto.Adapters.MyXQL'},
           {url,{system,<<"DATABASE_URL">>}},
           {ssl,{system,boolean,<<"DATABASE_USE_SSL">>,true}},
           {timeout,{system,integer,<<"DATABASE_TIMEOUT">>,15000}},
           {pool_size,{system,integer,<<"POOL_SIZE">>,10}},
           {loggers,[{'Elixir.Ecto.LogEntry',log,[]}]},
           {ssl,{system,boolean,<<"DATABASE_USE_SSL">>,true}},
           {priv,<<"priv/repo">>}]},
      {'Elixir.BorsNG.Endpoint',
          [{render_errors,
               [{view,'Elixir.BorsNG.ErrorView'},
                {accepts,[<<"html">>,<<"json">>]}]},
           {pubsub_server,'Elixir.BorsNG.PubSub'},
           {http,[{port,{system,<<"PORT">>}}]},
           {url,
               [{host,{system,<<"PUBLIC_HOST">>}},
                {scheme,{system,<<"PUBLIC_PROTOCOL">>,<<"https">>}},
                {port,{system,integer,<<"PUBLIC_PORT">>,443}}]},
           {check_origin,false},
           {cache_static_manifest,<<"priv/static/cache_manifest.json">>},
           {server,true},
           {root,<<".">>},
           {version,nil},
           {secret_key_base,{system,<<"SECRET_KEY_BASE">>}}
           ]},
      {'Elixir.BorsNG.WebhookParserPlug',
          [{webhook_secret,{system,<<"GITHUB_WEBHOOK_SECRET">>}}]},
      {'Elixir.BorsNG.GitHub.OAuth2',
          [{client_id,{system,<<"GITHUB_CLIENT_ID">>}},
           {client_secret,{system,<<"GITHUB_CLIENT_SECRET">>}}]},
      {'Elixir.BorsNG.GitHub.Server',
          [{iss,{system,integer,<<"GITHUB_INTEGRATION_ID">>}},
           {pem,
               {system,
                   {'Elixir.Base',decode64,[]},
                   <<"GITHUB_INTEGRATION_PEM">>}}]}]}].
