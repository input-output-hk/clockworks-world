[{distillery,[{config_providers,[]}]},
 {iex,
     [{default_prompt,<<"%prefix(%counter)>">>},
      {alive_prompt,<<"%prefix(%node)%counter>">>},
      {colors,[]},
      {history_size,20},
      {inspect,[{pretty,true}]}]},
 {bors,
     [{'Elixir.BorsNG.Database.RepoPostgres',
          [{adapter,'Elixir.Ecto.Adapters.Postgres'},
           {url,{system,<<"DATABASE_URL">>}},
           {timeout,{system,integer,<<"DATABASE_TIMEOUT">>,15000}},
           {pool_size,{system,integer,<<"POOL_SIZE">>,10}},
           {loggers,[{'Elixir.Ecto.LogEntry',log,[]}]},
           {ssl,{system,boolean,<<"DATABASE_USE_SSL">>,true}},
           {prepare,{system,atom,<<"DATABASE_PREPARE_MODE">>,named}},
           {priv,<<"priv/repo">>}]},
      {log_outgoing,{system,<<"BORS_LOG_OUTGOING">>,false}},
      {'Elixir.BorsNG.Endpoint',
          [{render_errors,
               [{view,'Elixir.BorsNG.ErrorView'},
                {accepts,[<<"html">>,<<"json">>]}]},
           {pubsub_server,'Elixir.BorsNG.PubSub'},
           {http,[{port,{system,<<"PORT">>}}]},
           {url,
               [{host,{system,<<"PUBLIC_HOST">>}},
                {scheme,{system,<<"PUBLIC_PROTOCOL">>,<<"https">>}},
                {port,{system,integer,<<"PUBLIC_PORT">>,443}}]},
           {check_origin,false},
           {cache_static_manifest,<<"priv/static/cache_manifest.json">>},
           {server,true},
           {root,<<".">>},
           {version,nil},
           {secret_key_base,{system,<<"SECRET_KEY_BASE">>}}
           ]},
      {server,'Elixir.BorsNG.GitHub.Server'},
      {'Elixir.BorsNG.GitHub.OAuth2',
          [{client_id,{system,<<"GITHUB_CLIENT_ID">>}},
           {client_secret,{system,<<"GITHUB_CLIENT_SECRET">>}}]},
      {poll_period,{system,integer,<<"BORS_POLL_PERIOD">>,1800000}},
      {api_github_root,
          {system,string,<<"GITHUB_URL_ROOT_API">>,
              <<"https://api.github.com">>}},
      {'Elixir.BorsNG.GitHub.Server',
          [{iss,{system,integer,<<"GITHUB_INTEGRATION_ID">>}},
           {pem,
               {system,
                   {'Elixir.Base',decode64,[]},
                   <<"GITHUB_INTEGRATION_PEM">>}}]},
      {html_github_root,
          {system,string,<<"GITHUB_URL_ROOT_HTML">>,<<"https://github.com">>}},
      {ecto_repos,['Elixir.BorsNG.Database.RepoPostgres']},
      {'Elixir.BorsNG.Database.RepoMysql',
          [{adapter,'Elixir.Ecto.Adapters.MyXQL'},
           {url,{system,<<"DATABASE_URL">>}},
           {ssl,{system,boolean,<<"DATABASE_USE_SSL">>,true}},
           {timeout,{system,integer,<<"DATABASE_TIMEOUT">>,15000}},
           {pool_size,{system,integer,<<"POOL_SIZE">>,10}},
           {loggers,[{'Elixir.Ecto.LogEntry',log,[]}]},
           {ssl,{system,boolean,<<"DATABASE_USE_SSL">>,true}},
           {priv,<<"priv/repo">>}]},
      {'Elixir.BorsNG',
          [{command_trigger,{system,string,<<"COMMAND_TRIGGER">>,<<"bors">>}},
           {home_url,<<"https://bors.tech/">>},
           {allow_private_repos,
               {system,boolean,<<"ALLOW_PRIVATE_REPOS">>,false}},
           {dashboard_header_html,
               {system,string,<<"DASHBOARD_HEADER_HTML">>,
                   <<"      <a class=header-link href=\"https://bors.tech\">Home</a>\n      <a class=header-link href=\"https://forum.bors.tech\">Forum</a>\n      <a class=header-link href=\"https://bors.tech/documentation/getting-started/\">Docs</a>\n      <b class=header-link>Dashboard</b>\n">>}},
           {dashboard_footer_html,
               {system,string,<<"DASHBOARD_FOOTER_HTML">>,
                   <<"    This service is provided for free on a best-effort basis.\n">>}}]},
      {api_github_timeout,{system,integer,<<"GITHUB_API_TIMEOUT">>,100000}},
      {oauth2,'Elixir.BorsNG.GitHub.OAuth2'},
      {'Elixir.BorsNG.WebhookParserPlug',
          [{webhook_secret,{system,<<"GITHUB_WEBHOOK_SECRET">>}}]},
      {celebrate_new_year,true}]},
 {db_connection,[]},
 {confex,[]},
 {jose,[]},
 {ranch,[]},
 {public_key,[]},
 {compiler,[]},
 {inets,[]},
 {runtime_tools,[]},
 {kernel,
     [{net_tickintensity,4},
      {connect_all,true},
      {logger_sasl_compatible,false},
      {logger_level,notice},
      {shell_docs_ansi,auto},
      {net_ticktime,60},
      {prevent_overlapping_partitions,true},
      {logger,
          [{handler,default,logger_std_h,
               #{config => #{type => standard_io},
                 formatter =>
                     {logger_formatter,
                         #{legacy_header => true,single_line => false}}}}]}]},
 {certifi,[]},
 {eex,[]},
 {mimerl,[]},
 {gettext,[{plural_forms,'Elixir.Gettext.Plural'},{default_locale,<<"en">>}]},
 {jason,[]},
 {unicode_util_compat,[]},
 {phoenix_html,
     [{csrf_token_reader,
          {'Elixir.Plug.CSRFProtection',get_csrf_token_for,[]}}]},
 {tesla,[{'Elixir.Tesla.Middleware.Logger',[{debug,true}]}]},
 {ecto_sql,[{postgres_map_type,<<"jsonb">>}]},
 {parse_trans,[]},
 {mix,[{colors,[]}]},
 {telemetry,[]},
 {idna,[]},
 {joken,[]},
 {ssl,[]},
 {stdlib,[]},
 {plug_cowboy,[]},
 {logger,
     [{handle_otp_reports,true},
      {compile_time_purge_matching,[]},
      {level,info},
      {console,
          [{format,<<"$time $metadata[$level] $message\n">>},
           {metadata,[request_id,pid]}]},
      {compile_time_application,nil},
      {handle_sasl_reports,false},
      {discard_threshold_periodic_check,30000},
      {discard_threshold_for_error_logger,500},
      {utc_log,false},
      {discard_threshold,500},
      {sync_threshold,20},
      {translators,[{'Elixir.Logger.Translator',translate}]},
      {truncate,8096},
      {translator_inspect_opts,[]},
      {start_options,[]},
      {backends,[console]}]},
 {oauth2,[]},
 {decimal,[]},
 {plug_crypto,[]},
 {ex_link_header,[]},
 {phoenix_pubsub,[]},
 {connection,[]},
 {postgrex,[{type_server_reap_after,180000},{json_library,'Elixir.Jason'}]},
 {myxql,[{json_library,'Elixir.Jason'}]},
 {sasl,[{sasl_error_logger,false},{errlog_type,error}]},
 {plug,[{validate_header_keys_during_test,true}]},
 {hackney,
     [{timeout,150000},
      {maxt,1},
      {restart,permanent},
      {maxr,10},
      {shutdown,10000},
      {max_connections,50}]},
 {phoenix,
     [{logger,true},
      {json_library,'Elixir.Jason'},
      {trim_on_html_eex_engine,true},
      {gzippable_exts,
          [<<".js">>,<<".css">>,<<".txt">>,<<".text">>,<<".html">>,
           <<".json">>,<<".svg">>,<<".eot">>,<<".ttf">>]},
      {format_encoders,[]},
      {template_engines,[]},
      {filter_parameters,[<<"password">>]},
      {serve_endpoints,false},
      {stacktrace_depth,nil}]},
 {glob,[]},
 {artificery,[]},
 {cowlib,[]},
 {crypto,[{fips_mode,false},{rand_cache_size,896}]},
 {toml,[]},
 {ssl_verify_fun,[]},
 {metrics,[]},
 {elixir,
     [{check_endianness,true},
      {dbg_callback,{'Elixir.Macro',dbg,[]}},
      {time_zone_database,'Elixir.Calendar.UTCOnlyTimeZoneDatabase'},
      {ansi_syntax_colors,
          [{atom,cyan},
           {binary,default_color},
           {boolean,magenta},
           {charlist,yellow},
           {list,default_color},
           {map,default_color},
           {nil,magenta},
           {number,yellow},
           {string,green},
           {tuple,default_color}]},
      {ansi_enabled,false}]},
 {syntax_tools,[]},
 {cowboy,[]},
 {mime,[]},
 {phoenix_ecto,[{exclude_ecto_exceptions_from_plug,[]}]},
 {ecto,[]},
 {asn1,[]}].
